#!/bin/bash
source $OPENSHIFT_CARTRIDGE_SDK_BASH

FUSE_BIN_DIR=${OPENSHIFT_FUSE_DIR}/container/bin
FUSE_PID_FILE=${OPENSHIFT_FUSE_DIR}/container/instances/instance.properties

function start() {
    ${FUSE_BIN_DIR}/start
    wait_for_start    
    client_result "Started Fuse cart"
}

function stop() {
    PID=`cat $FUSE_PID_FILE | grep "item.0.pid" | awk -F " = " '{print $2}'`
    kill $PID
    for i in {1..20};
        do
            if ps -p $PID > /dev/null; then
                echo "Fabric has been successfully stopped"
                break
            else
                sleep 3
            fi
        done
    client_result "Stopped Fuse cart"
}

function restart() {
    if is_running; then
        stop
    fi
    start
    fabric_join
}

function status() {
   if is_running; then
      client_result "Application is running"
   else
      client_result "Application is either stopped or inaccessible"
   fi
}

function reload() {
    client_message "Reloading Fuse cart"
    restart
}

function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_FUSE_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_FUSE_LOG_DIR/*
}

function is_running() {
   #Check if instance file exists
   if [ ! -f $FUSE_PID_FILE ]; then
      return 1
   fi

   #Check if pid exists
   PID=`cat $FUSE_PID_FILE | grep "item.0.pid" | awk -F " = " '{print $2}'`
   if [ "$PID" = "" ]; then
      return 1
   elif ps -p $PID > /dev/null; then
      return 0
   else
      return 1
   fi
}

function wait_for_start() {
  for i in {1..20};
     do
       if [ ! -f $FUSE_PID_FILE ]; then
         sleep 1
       else
         break
       fi
     done
   if [ -f $FUSE_PID_FILE ]; then
      for j in {1..20};
         do
           PID=`cat $FUSE_PID_FILE | grep "item.0.pid" | awk -F "=" '{print $2}'`
           if [ "$PID" = "" ]; then
             sleep 1
           else
            break
           fi
     done
     if ps -p $PID > /dev/null; then
       client_result "Fabric($PID) is started successfully"
     else
       client_error "Command Failed: Fuse process ($PID) is not running"
     fi
   else
    client_error "Command Failed:Could not find Fuse instance.properties"
   fi
}

function deploy() {
  fabric_shell "fabric:import ${OPENSHIFT_REPO_DIR}/.openshift/config/profiles"
}

function fabric_join() {
    FABRIC_CHECKER="${OPENSHIFT_FUSE_DIR}/container/etc/fabric-configured"
    if [  -f $FABRIC_CHECKER ]; then
      client_message "Fabirc is already configured"
    elif [ ! -z $ZOOKEEPER_URL ]; then
        PASSWD_FILE=${OPENSHIFT_FUSE_DIR}/container/etc/passwd
        PASSWORD=`cat $PASSWD_FILE`
        ${FUSE_BIN_DIR}/client -r 3 -d 10 -h ${OPENSHIFT_FUSE_IP} -a ${OPENSHIFT_FUSE_SSH_PORT} -u admin -p ${PASSWORD} "wait-for-service org.fusesource.fabric.boot.commands.service.Join"
        ${FUSE_BIN_DIR}/client -h ${OPENSHIFT_FUSE_IP} -a ${OPENSHIFT_FUSE_SSH_PORT} -u admin -p ${PASSWORD} "fabric:join -f --zookeeper-password ${REGISTRY_PASSWORD} ${ZOOKEEPER_URL}"
        echo "true" > $FABRIC_CHECKER
    fi
}

case "$1" in
  deploy)    deploy ;;
  start)     start ;;
  stop)      stop ;;
  restart)   restart ;;
  status)    status ;;
  reload)    reload ;;
  tidy)      tidy ;;
  *)         exit 0
esac
